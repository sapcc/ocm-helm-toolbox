# Configuration file for <https://github.com/sapcc/go-makefile-maker>

metadata:
  url: https://github.com/sapcc/ocm-helm-toolbox

binaries:
  - name:        ocm-helm-toolbox
    fromPackage: .
    installTo:   bin/

coverageTest:
  only: '/internal'

dockerfile:
  enabled: true
  runAsRoot: true # This image runs in CI and needs to be able to access the volumes passed to it by Concourse.
  extraBuildStages:
    - |
      FROM alpine:3.21 AS downloader
      ARG HELM_VERSION=3.17.3
      ARG OCM_VERSION=0.23.0
      ARG CURL="curl --retry 5 --fail-early --retry-all-errors -fLZs"

      RUN apk add --no-cache --no-progress ca-certificates curl git && mkdir -p /pkg/bin
      RUN ${CURL} https://get.helm.sh/helm-v${HELM_VERSION}-linux-amd64.tar.gz | tar -xz \
          && mv linux-amd64/helm /pkg/bin/helm \
          && rm -rf linux-amd64
      RUN ${CURL} https://github.com/open-component-model/ocm/releases/download/v${OCM_VERSION}/ocm-${OCM_VERSION}-linux-amd64.tar.gz | tar -xz \
          && mv ocm /pkg/bin/ocm
  extraPackages:
    - git
    - yq # callers of `ocm-helm-toolbox bundle` might want to use this to grab image versions out of chart/values.yaml when building --image-relations
  extraDirectives:
    - 'COPY --from=downloader /pkg/ /usr/'
    # make sure that all copied binaries can be executed (e.g. if cgo is used, libc.so needs to match)
    - 'RUN ocm --version 2>/dev/null && helm version -c 2>/dev/null'

golang:
  autoupdateableDeps: ^github.com/(?:sapcc|sap-cloud-infrastructure)/
  enableVendoring: true
  setGoModVersion: true

golangciLint:
  createConfig: true
  errcheckExcludes:
    # Any error in HTTP handlers is handled by the server itself.
    - (net/http.ResponseWriter).Write

githubWorkflow:
  ci:
    enabled: true
    coveralls: true

renovate:
  enabled: true
  assignees:
    - majewsky
